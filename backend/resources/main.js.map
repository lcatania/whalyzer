{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/models/Container.ts","./src/app/partials/command-palette/command-palette.component.ts","./src/app/partials/command-palette/command-palette.component.html","./src/app/partials/container-dialog/container-dialog.component.ts","./src/app/partials/container-dialog/container-dialog.component.html","./src/app/pipes/state-to-color.pipe.ts","./src/main.ts"],"sourcesContent":["import { Component, ElementRef, HostListener, ViewChild } from '@angular/core';\nimport { NgFor, NgIf } from '@angular/common';\nimport { DragScrollModule } from 'ngx-drag-scroll';\nimport { Tile } from './models/Tile';\nimport { Container } from './models/Container';\nimport { ContainerStateToColorPipe } from './pipes/state-to-color.pipe';\nimport { Network, NetworkConnection } from './models/Network';\nimport { ContainerDialogComponent } from \"./partials/container-dialog/container-dialog.component\";\nimport { CommandPaletteComponent } from \"./partials/command-palette/command-palette.component\";\n\nconst CONTAINER_IMAGE = '../assets/container.png'\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  imports: [NgIf, NgFor, DragScrollModule, ContainerStateToColorPipe, ContainerDialogComponent, CommandPaletteComponent]\n})\nexport class AppComponent {\n\n  ROWS = 30;\n  COLS = 30;\n\n  baseTileLayer: Array<Array<Tile>> = [];\n  midTileLayer: Array<Array<Container | undefined>> = [];\n  currentContainerCoords: { [key: string]: { ROW: number, COL: number } } = {};\n  selectedContainer!: Container\n  networks: Network[] = [];\n  connections: NetworkConnection[] = [];\n  tooltip: { content: string, top: number, left: number } | undefined = undefined;\n\n  @ViewChild('map', { static: false }) map!: ElementRef<HTMLDivElement>;\n\n  @HostListener('window:keydown', ['$event'])\n  onKeyDown(event:KeyboardEvent) {\n    if(event.key === 'Escape') {\n      this.isCommandPaletteVisible = false;\n    }\n    if(event.key === 'p' && event.ctrlKey){\n      this.isCommandPaletteVisible = true;\n    }\n  }\n\n  isContainerDialogVisible: boolean = false;\n  isCommandPaletteVisible: boolean = false;\n\n  async ngOnInit() {\n    for (let xIndex = 0; xIndex <= this.ROWS; xIndex++) {\n      this.baseTileLayer.push([]);\n      this.midTileLayer.push([]);\n      for (let yIndex = 0; yIndex <= this.COLS; yIndex++) {\n        this.baseTileLayer[xIndex].push({\n        })\n        this.midTileLayer[xIndex].push(undefined)\n      }\n    }\n    await Neutralino.events.on(\"CONTAINER_LIST\", (data: CustomEvent<Container[]>) => {\n      //Generate Containers in random places in boundaries\n      Object.values(this.currentContainerCoords).forEach(coords => {\n        this.midTileLayer[coords.ROW][coords.COL] = undefined\n      })\n      this.currentContainerCoords = {};\n      if (data.detail.length === 0)\n        return;\n      this.createContainersInBoundaries(data.detail);\n    })\n    await Neutralino.extensions.dispatch(\"js.neutralino.sampleextension\", \"GET_CONTAINER_LIST\", undefined)\n    await Neutralino.events.on(\"NEW_CONTAINER\", (data: CustomEvent<Container>) => {\n      //Generate Containers in random places in boundaries\n      if (!data.detail)\n        return;\n      this.createContainersInBoundaries([data.detail]);\n    })\n    await Neutralino.events.on(\"CONTAINER_UPDATE\", (data: CustomEvent<Container>) => {\n      const targetContainerCoords = this.currentContainerCoords[data.detail.id];\n      if (!targetContainerCoords)\n        return;\n      let targetContainer = this.midTileLayer[targetContainerCoords.ROW][targetContainerCoords.COL];\n      if (!targetContainer)\n        return;\n      targetContainer.state = data.detail.state;\n      targetContainer.status = data.detail.status;\n    })\n    await Neutralino.events.on(\"REMOVE_CONTAINER\", (data: CustomEvent<string>) => {\n      const containerCoords = this.currentContainerCoords[data.detail];\n      if (!containerCoords)\n        return;\n      this.connections = this.connections.filter(c => c.from !== data.detail && c.to !== data.detail)\n      this.midTileLayer[containerCoords.ROW][containerCoords.COL] = undefined\n      delete this.currentContainerCoords[data.detail]\n    })\n\n    await Neutralino.events.on(\"NETWORK_LIST\", (data: CustomEvent<{ name: string, containers: string[] }[]>) => {\n      data.detail.forEach((n) => {\n        const index = this.networks.findIndex((n) => n.name === n.name);\n        if (index !== -1) {\n          const newContainerInNetwork = n.containers.filter((c) => !Object.keys(this.networks[index].containers).includes(c))\n          let containerPairs: { firstContainer: string, secondContainer: string }[] = [];\n\n          if (newContainerInNetwork.length === 0)\n            return;\n\n          for (let index = 0; index < n.containers.length; index++) {\n            const firstElement = n.containers[index];\n            for (let secondIndex = 0; secondIndex < newContainerInNetwork.length; secondIndex++) {\n              const secondElement = newContainerInNetwork[secondIndex];\n              if (firstElement === secondElement)\n                continue;\n              containerPairs.push({\n                firstContainer: firstElement,\n                secondContainer: secondElement\n              })\n            }\n          }\n          this.networks[index].containers = n.containers.reduce((map: { [key: string]: { COL: number, ROW: number } }, id: string) => {\n            map[id] = this.currentContainerCoords[id];\n            return map;\n          }, {});\n          this.createNetworkConnection(n.name, containerPairs);\n        }\n        else {\n          this.networks.push({\n            name: n.name,\n            containers: n.containers.reduce((map: { [key: string]: { COL: number, ROW: number } }, id: string) => {\n              map[id] = this.currentContainerCoords[id];\n              return map;\n            }, {})\n          })\n          const containerPairs: { firstContainer: string, secondContainer: string }[] = [];\n          for (let index = 0; index < n.containers.length; index++) {\n            const firstElement = n.containers[index];\n            for (let secondIndex = 0; secondIndex < n.containers.length; secondIndex++) {\n              const secondElement = n.containers[secondIndex];\n              if (index === secondIndex)\n                continue;\n\n              if (containerPairs.findIndex(cp => cp.firstContainer === secondElement && cp.secondContainer === firstElement) > -1)\n                continue;\n\n              containerPairs.push({\n                firstContainer: firstElement,\n                secondContainer: secondElement\n              })\n            }\n          }\n          this.createNetworkConnection(n.name, containerPairs);\n        }\n      })\n    })\n  }\n\n  addContainer(row: number, col: number, container: Container) {\n    let entity: Container;\n    entity = {\n      ...container,\n      icon: CONTAINER_IMAGE,\n    } as Container;\n    this.midTileLayer[row][col] = entity;\n  }\n\n  getVisibleTiles(): { firstVisibleRowIndex: number, lastVisibleRowIndex: number, firstVisibleColIndex: number, lastVisibleColIndex: number } | undefined {\n    const mapBoundings = this.map.nativeElement.getBoundingClientRect();\n    let firstVisibleRow = undefined;\n    let firstVisibleRowIndex = undefined;\n    let lastVisibleRowIndex = undefined;\n\n    let firstVisibleColIndex = undefined;\n    let lastVisibleColIndex = undefined;\n\n    for (let index = 0; index < this.map.nativeElement.children.length; index++) {\n      const row = this.map.nativeElement.children[index];\n      const rowBoudings = row.getBoundingClientRect();\n\n      // If the child is in the viewport\n      if (rowBoudings.top >= -15 && rowBoudings.bottom <= ((mapBoundings.bottom < 0 ? (mapBoundings.height + mapBoundings.bottom) : mapBoundings.bottom)) + 15) {\n        if (!firstVisibleRow) {\n          firstVisibleRow = row;\n          firstVisibleRowIndex = index;\n        }\n      }\n      // If the child is outside the viewport\n      else {\n        if (!firstVisibleRow)\n          continue;\n        if (!lastVisibleRowIndex) {\n          lastVisibleRowIndex = index - 1;\n          break;\n        }\n\n      }\n    }\n\n    if (!firstVisibleRow)\n      return undefined;\n\n    for (let index = 0; index < firstVisibleRow.children.length; index++) {\n      const tile = firstVisibleRow.children[index];\n      const tileBoudings = tile.getBoundingClientRect();\n      if (tileBoudings.left >= 0 && tileBoudings.right <= (mapBoundings.right < 0 ? (mapBoundings.width + mapBoundings.left) : mapBoundings.width - 16)) {\n        if (firstVisibleColIndex === undefined)\n          firstVisibleColIndex = index;\n      }\n      else {\n        if (firstVisibleColIndex === undefined)\n          continue;\n        if (!lastVisibleColIndex)\n          lastVisibleColIndex = index;\n        break;\n      }\n    }\n\n    return { firstVisibleColIndex: firstVisibleColIndex ?? 0, firstVisibleRowIndex: firstVisibleRowIndex ?? 0, lastVisibleColIndex: lastVisibleColIndex ?? 0, lastVisibleRowIndex: lastVisibleRowIndex ?? 0 }\n  }\n\n  createContainersInBoundaries(services: Container[]): { row: number, col: number }[] {\n    let result: { row: number, col: number }[] = []\n\n    const visibleTileBoundaries = this.getVisibleTiles();\n\n    if (!visibleTileBoundaries)\n      return [];\n\n    const centerRow = Math.floor((visibleTileBoundaries.firstVisibleRowIndex ?? 0) + ((visibleTileBoundaries.lastVisibleRowIndex ?? 0) / 2));\n    const centerCol = Math.floor((visibleTileBoundaries.firstVisibleColIndex ?? 0) + ((visibleTileBoundaries.lastVisibleColIndex ?? 0) / 2));\n    let radius = 3;\n    let maxRow = centerRow + radius;\n    let maxCol = centerCol + radius;\n    let minRow = centerRow - radius;\n    let minCol = centerCol - radius;\n\n    let randomRow: number = 0;\n    let randomCol: number = 0;\n\n    services.forEach((value) => {\n      do {\n        randomRow = Math.floor(Math.random() * (maxRow - minRow + 1)) + minRow;\n        randomCol = Math.floor(Math.random() * (maxCol - minCol + 1)) + minCol;\n      } while (this.midTileLayer[randomRow][randomCol]);\n      this.addContainer(randomRow, randomCol, value)\n      this.currentContainerCoords[value.id] = { ROW: randomRow, COL: randomCol };\n      ++radius;\n    });\n    return result;\n  }\n\n  createNetworkConnection(networkName: string, containerPairs: { firstContainer: string, secondContainer: string }[]) {\n    for (let index = 0; index < containerPairs.length; index++) {\n      const newConn = containerPairs[index];\n      const firstDOM = this.getDOMElementFromCoords(this.currentContainerCoords[newConn.firstContainer]);\n      if (!firstDOM)\n        continue;\n      const secondDOM = this.getDOMElementFromCoords(this.currentContainerCoords[newConn.secondContainer]);\n      if (!secondDOM)\n        continue;\n      const firstBounds = firstDOM.getBoundingClientRect();\n      const secondBounds = secondDOM.getBoundingClientRect();\n      this.connections.push({\n        name: networkName,\n        from: newConn.firstContainer,\n        to: newConn.secondContainer,\n        x1: firstBounds.x + 32,\n        x2: secondBounds.x + 32,\n        y1: firstBounds.y + 16,\n        y2: secondBounds.y + 16,\n        isHovered: false\n      })\n\n    }\n  }\n\n  getDOMElementFromCoords(coords: { COL: number, ROW: number }): HTMLElement | null {\n    return document.getElementById(coords.ROW.toString() + coords.COL.toString());\n  }\n\n  entitySelected(event: MouseEvent, rowIndex: number, colIndex: number) {\n    const entity = this.midTileLayer[rowIndex][colIndex];\n    if (!entity)\n      return;\n    this.isContainerDialogVisible = true\n    this.selectedContainer = entity;\n    event.stopPropagation();\n  }\n\n  baseSelected() {\n    console.log(\"BASE\");\n  }\n\n  mouseLeaveConnection(connection: NetworkConnection) {\n    this.connections.forEach((c) => {\n      c.isHovered = false;\n    })\n    this.tooltip = undefined;\n  }\n\n  mouseEnterConnection(connection: NetworkConnection, element: unknown) {\n    this.connections.forEach((c) => {\n      if (c.name === connection.name)\n        c.isHovered = true;\n    })\n    const elementBounds = (element as SVGLineElement).getBoundingClientRect()\n    this.tooltip = {\n      content: connection.name,\n      left: elementBounds.left - 20 + (elementBounds.width / 2),\n      top: elementBounds.top + (elementBounds.height / 2)\n    };\n  }\n\n  mouseLeaveContainer(container: Container | undefined) {\n    if (!container)\n      return;\n    this.tooltip = undefined;\n  }\n\n  mouseEnterContainer(container: Container | undefined, element: HTMLDivElement) {\n    if (!container)\n      return;\n    this.tooltip = {\n      content: container.name,\n      left: element.getBoundingClientRect().left,\n      top: element.getBoundingClientRect().top\n    };\n  }\n\n}\n","<drag-scroll>\n  <div #map class=\"w-screen h-screen flex flex-col overflow-visible relative\">\n    @for (row of baseTileLayer;let rowIndex = $index; track rowIndex) {\n    <div class=\"w-full h-full flex\">\n      @for (cell of row;let colIndex = $index; track colIndex ) {\n      <div [id]=\"(rowIndex).toString() + (colIndex).toString()\" (click)=\"baseSelected()\"\n        class=\" aspect-square w-[64px] h-[64px] flex items-center justify-center text-black hover:bg-green-200 bg-green-300  relative\">\n        @if (midTileLayer[rowIndex][colIndex]) {\n        <div #cell (click)=\"entitySelected($event, rowIndex, colIndex)\"\n          (mouseenter)=\"mouseEnterContainer(midTileLayer[rowIndex][colIndex], cell)\"\n          (mouseleave)=\"mouseLeaveContainer(midTileLayer[rowIndex][colIndex])\"\n          [style.background-image]=\"'url(' + midTileLayer[rowIndex][colIndex]?.icon + ')'\"\n          class=\"aspect-square w-[64px] h-[64px] flex items-center justify-center text-white absolute z-10\">\n          <div\n            [class]=\"'pixel-border absolute top-0 right-2 w-[10px] h-[10px] ' + (midTileLayer[rowIndex][colIndex]?.state | stateToColor)\">\n          </div>\n        </div>\n        }\n      </div>\n      }\n    </div>\n    }\n    <svg class=\"absolute w-screen h-screen z-20 pointer-events-none\">\n      @for (connection of connections; track $index) {\n      <line #conn class=\"pointer-events-auto\" (mouseenter)=\"mouseEnterConnection(connection,conn)\"\n        (mouseleave)=\"mouseLeaveConnection(connection)\" [attr.x1]=\"connection.x1\" [attr.y1]=\"connection.y1\"\n        stroke-width=\"4px\" [attr.x2]=\"connection.x2\" [attr.y2]=\"connection.y2\"\n        [attr.stroke]=\"connection.isHovered ? 'red' : 'black'\" />\n      }\n    </svg>\n    @if(tooltip) {\n    <div [style.top]=\"tooltip.top - 20 + 'px'\" [style.left]=\"tooltip.left - 20 + 'px'\"\n      class=\"pixel-border bg-gray-100 p-1 min-w-[100px] z-20 flex justify-center text-zinc-900 absolute\">\n      <span class=\"text-xl\">{{tooltip.content}}</span>\n    </div>\n    }\n  </div>\n</drag-scroll>\n<app-command-palette [(isVisible)]=\"isCommandPaletteVisible\"></app-command-palette>\n<app-container-dialog [container]=\"selectedContainer\"\n  [(isVisible)]=\"isContainerDialogVisible\"></app-container-dialog>","import { ApplicationConfig } from '@angular/core';\nimport { provideAnimationsAsync } from \"@angular/platform-browser/animations/async\";\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideAnimationsAsync(),\n  ]\n};\n","import { Tile } from \"./Tile\";\n\nexport interface Container extends Tile {\n    id: string;\n    name: string;\n    state: ContainerState;\n    status:string;\n    image: string;\n    ports: Port[];\n    mounts: Mount[];\n}\n\nexport type Port = {\n    privatePort : number;\n    publicPort: number;\n}\n\nexport type Mount = {\n    source: string;\n    destination:string;\n}\n\nexport enum ContainerState {\n    RUNNING = \"running\",\n    CREATED = \"created\",\n    RESTARTING = \"restarting\",\n    EXITED = \"exited\",\n    PAUSED = \"paused\",\n    DEAD = \"dead\"\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\n\n@Component({\n    standalone: true,\n    selector: 'app-command-palette',\n    templateUrl: 'command-palette.component.html'\n})\n\nexport class CommandPaletteComponent implements OnInit {\n\n    @Input({ required: true }) isVisible: boolean = false;\n    @Output() isVisibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor() { }\n\n    ngOnInit() { }\n\n\n}","<button (click)=\"isVisible = !isVisible\"\n    class=\"absolute top-5 right-5 rounded-md bg-black w-[42px] h-[42px] flex flex-col text-white justify-center items-center text-3xl font-bold leading-[10px]\">\n    <span>></span>\n    <span>_</span>\n</button>\n@if(isVisible){\n<div class=\"absolute z-30 bottom-5 rounded-md left-0 w-full h-48 bg-black flex flex-col justify-end  p-3\">\n    <span></span>\n    <ol class=\"text-white px-3\">\n        <li class=\"text-2xl\">\n            <span>start \"name\" => Start a container</span>\n        </li>\n        <li class=\"text-2xl\">\n            <span>stop \"name\" => Stop a running container</span>\n        </li>\n        <li class=\"text-2xl\">\n            <span>pause \"name\" => Pause a running container</span>\n        </li>\n        <li class=\"text-2xl\">\n            <span>remove \"name\" => Destroy a stopped container</span>\n        </li>\n    </ol>\n\n    <div class=\"flex\">\n        <span class=\"text-2xl text-white\">></span>\n        <input #commandInput autofocus=\"true\" class=\"w-full bg-black text-white text-2xl outline-none px-5\" />\n    </div>\n</div>\n}","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Container } from 'src/app/models/Container';\nimport { ContainerStateToColorPipe } from \"../../pipes/state-to-color.pipe\";\nimport { animate, style, transition, trigger } from '@angular/animations';\n\n@Component({\n    standalone: true,\n    selector: 'app-container-dialog',\n    templateUrl: 'container-dialog.component.html',\n    imports: [ContainerStateToColorPipe],\n    animations: [\n        trigger('slideInOut', [\n            transition(':enter', [\n                style({ transform: \"translateX(-100%)\" }),\n                animate('150ms', style({ transform: 0 })),\n            ]),\n            transition(':leave', [\n                animate('150ms', style({ transform: \"translateX(-100%)\" }))\n            ])\n        ]),\n    ]\n})\n\nexport class ContainerDialogComponent implements OnInit {\n\n    @Input({ required: true }) container!: Container\n\n    @Input({ required: true }) isVisible: boolean = false;\n    @Output() isVisibleChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n    constructor() { }\n\n    ngOnInit() { }\n\n    closeDialog() {\n        this.isVisibleChange.emit(false);\n    }\n}","@if(isVisible){\n<div @slideInOut class=\"pixel-border absolute top-0 left-0 w-2/4 h-full bg-sky-200 z-30\">\n    <div class=\"flex flex-col h-full\">\n        <div class=\" h-16 w-full flex justify-between items-center px-6\">\n            <div class=\"flex gap-x-5 items-center\">\n                <div [class]=\"'pixel-border w-[10px] h-[10px] ' + (container.state | stateToColor)\">\n                </div>\n                <span class=\"text-2xl\">{{container.state}} ({{container.status}})</span>\n            </div>\n            <button class=\"base-button w-8 h-8\" (click)=\"closeDialog()\">X</button>\n        </div>\n        <div class=\"flex-1 flex-col flex gap-y-3 px-5 \">\n            <span class=\"text-3xl\">Name:</span>\n            <input class=\"pixel-border base-input\" placeholder=\"Awesome Container\" readonly [value]=\"container.name\" />\n            <span class=\"text-3xl\">Image:</span>\n            <input class=\"pixel-border base-input\" placeholder=\"Awesome Container\" readonly [value]=\"container.image\" />\n            <span class=\"text-3xl\">Ports:</span>\n            @for (port of container.ports; track $index) {\n            <span>{{port.privatePort}} : {{port.publicPort}}</span>\n            }\n            @empty {\n            <span class=\"text-2xl\">No ports exposed :(</span>\n            }\n            <span class=\"text-3xl\">Mounts:</span>\n            @for (mount of container.mounts; track $index) {\n            <span class=\"text-2xl\">{{mount.destination}} : {{mount.source}}</span>\n            }\n            @empty {\n            <span>No mounts :(</span>\n            }\n        </div>\n\n        <div class=\"flex justify-end items-center gap-x-8 pe-6 h-20 w-full\">\n            @if(container.state === 'paused'){\n            <button class=\"base-button bg-yellow-200 border-yellow-500\">Resume</button>\n            }\n            @if(container.state === 'running'){\n            <button class=\"base-button bg-yellow-200 border-yellow-500\">Pause</button>\n            }\n            @if(container.state === 'running' || container.state === 'paused'){\n            <button class=\"base-button bg-red-200 border-red-500\">Stop</button>\n            }\n            @if(container.state === 'exited'){\n            <button class=\"base-button bg-green-400\">Start</button>\n            }\n        </div>\n    </div>\n\n</div>\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { ContainerState } from '../models/Container';\n\n@Pipe({\n    name: 'stateToColor',\n    standalone: true\n})\n\nexport class ContainerStateToColorPipe implements PipeTransform {\n    transform(value: ContainerState | undefined): string {\n        if(!value)\n            return \"\";\n        switch (value) {\n            case ContainerState.CREATED:\n            case ContainerState.RUNNING:\n                return \"bg-green-400\";\n            case ContainerState.PAUSED:\n                return \"bg-yellow-400\";\n            case ContainerState.RESTARTING:\n                return \"bg-blue-400\";\n            case ContainerState.DEAD:\n                return \"bg-white\";\n            case ContainerState.EXITED:\n                return \"bg-red-400\";\n        }\n    }\n}","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\nimport * as neutralinojs from \"@neutralinojs/lib\";\n\ndeclare global {\n  const Neutralino: typeof neutralinojs\n}\n\nNeutralino.init();\n\nbootstrapApplication(AppComponent, appConfig)\n  .catch((err) => console.error(err));\n"],"names":["DragScrollModule","ContainerStateToColorPipe","ContainerDialogComponent","CommandPaletteComponent","i0","ɵɵelementStart","ɵɵlistener","AppComponent_For_4_For_2_Conditional_1_Template_div_click_0_listener","$event","ɵɵrestoreView","_r15","colIndex_r9","ɵɵnextContext","$index","rowIndex_r5","ctx_r13","ɵɵresetView","entitySelected","AppComponent_For_4_For_2_Conditional_1_Template_div_mouseenter_0_listener","_r12","ɵɵreference","ctx_r17","mouseEnterContainer","midTileLayer","AppComponent_For_4_For_2_Conditional_1_Template_div_mouseleave_0_listener","ctx_r20","mouseLeaveContainer","ɵɵelement","ɵɵelementEnd","ɵɵstyleProp","ctx_r11","icon","ɵɵadvance","ɵɵclassMap","ɵɵpipeBind1","state","AppComponent_For_4_For_2_Template_div_click_0_listener","_r26","ctx_r25","baseSelected","ɵɵtemplate","AppComponent_For_4_For_2_Conditional_1_Template","ɵɵproperty","toString","ɵɵconditional","ctx_r7","ɵɵrepeaterCreate","AppComponent_For_4_For_2_Template","ɵɵrepeaterTrackByIndex","ɵɵrepeater","row_r4","AppComponent_For_7_Template__svg_line_mouseenter_0_listener","restoredCtx","_r33","connection_r28","$implicit","_r31","ctx_r32","mouseEnterConnection","AppComponent_For_7_Template__svg_line_mouseleave_0_listener","ctx_r34","mouseLeaveConnection","ɵɵattribute","x1","y1","x2","y2","isHovered","ɵɵnamespaceHTML","ɵɵtext","ctx_r3","tooltip","top","left","ɵɵtextInterpolate","content","CONTAINER_IMAGE","AppComponent","constructor","ROWS","COLS","baseTileLayer","currentContainerCoords","networks","connections","undefined","isContainerDialogVisible","isCommandPaletteVisible","onKeyDown","event","key","ctrlKey","ngOnInit","_this","_asyncToGenerator","xIndex","push","yIndex","Neutralino","events","on","data","Object","values","forEach","coords","ROW","COL","detail","length","createContainersInBoundaries","extensions","dispatch","targetContainerCoords","id","targetContainer","status","containerCoords","filter","c","from","to","n","index","findIndex","name","newContainerInNetwork","containers","keys","includes","containerPairs","firstElement","secondIndex","secondElement","firstContainer","secondContainer","reduce","map","createNetworkConnection","cp","addContainer","row","col","container","entity","getVisibleTiles","mapBoundings","nativeElement","getBoundingClientRect","firstVisibleRow","firstVisibleRowIndex","lastVisibleRowIndex","firstVisibleColIndex","lastVisibleColIndex","children","rowBoudings","bottom","height","tile","tileBoudings","right","width","services","result","visibleTileBoundaries","centerRow","Math","floor","centerCol","radius","maxRow","maxCol","minRow","minCol","randomRow","randomCol","value","random","networkName","newConn","firstDOM","getDOMElementFromCoords","secondDOM","firstBounds","secondBounds","x","y","document","getElementById","rowIndex","colIndex","selectedContainer","stopPropagation","console","log","connection","element","elementBounds","_","_2","selectors","viewQuery","AppComponent_Query","rf","ctx","ɵɵresolveWindow","AppComponent_For_4_Template","ɵɵnamespaceSVG","AppComponent_For_7_Template","AppComponent_Conditional_8_Template","AppComponent_Template_app_command_palette_isVisibleChange_9_listener","AppComponent_Template_app_container_dialog_isVisibleChange_10_listener","i1","DragScrollComponent","styles","provideAnimationsAsync","appConfig","providers","ContainerState","EventEmitter","isVisible","isVisibleChange","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","CommandPaletteComponent_Template","CommandPaletteComponent_Template_button_click_0_listener","CommandPaletteComponent_Conditional_5_Template","animate","style","transition","trigger","ɵɵtextInterpolate2","port_r9","privatePort","publicPort","mount_r12","destination","source","ContainerDialogComponent_Conditional_0_Template_button_click_8_listener","_r16","ctx_r15","closeDialog","ContainerDialogComponent_Conditional_0_For_20_Template","ContainerDialogComponent_Conditional_0_ForEmpty_21_Template","ContainerDialogComponent_Conditional_0_For_25_Template","ContainerDialogComponent_Conditional_0_ForEmpty_26_Template","ContainerDialogComponent_Conditional_0_Conditional_28_Template","ContainerDialogComponent_Conditional_0_Conditional_29_Template","ContainerDialogComponent_Conditional_0_Conditional_30_Template","ContainerDialogComponent_Conditional_0_Conditional_31_Template","ctx_r0","image","ports","mounts","emit","ContainerDialogComponent_Template","ContainerDialogComponent_Conditional_0_Template","encapsulation","animation","transform","CREATED","RUNNING","PAUSED","RESTARTING","DEAD","EXITED","pure","bootstrapApplication","init","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}