{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.config.ts","./src/app/models/Container.ts","./src/app/pipes/state-to-color.pipe.ts","./src/main.ts"],"sourcesContent":["import { Component, ElementRef, ViewChild } from '@angular/core';\nimport { NgFor, NgIf } from '@angular/common';\nimport { DragScrollModule } from 'ngx-drag-scroll';\nimport { Tile } from './models/Tile';\nimport { Container } from './models/Container';\nimport { ContainerStateToColorPipe } from './pipes/state-to-color.pipe';\nimport { Network, NetworkConnection } from './models/Network';\n\nconst CONTAINER_IMAGE = '../assets/container.png'\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [NgIf, NgFor, DragScrollModule, ContainerStateToColorPipe],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  ROWS = 30;\n  COLS = 30;\n\n  baseTileLayer: Array<Array<Tile>> = [];\n  midTileLayer: Array<Array<Container | undefined>> = [];\n  currentContainerCoords: { [key: string]: { ROW: number, COL: number } } = {};\n  selectedContainer!: Container\n  networks: Network[] = [];\n  connections: NetworkConnection[] = [];\n  tooltip: { content: string, top: number, left: number } | undefined = undefined;\n\n  @ViewChild('map', { static: false }) map!: ElementRef<HTMLDivElement>;\n\n  isCreateContainerModalVisible: boolean = false;\n\n  async ngOnInit() {\n    for (let xIndex = 0; xIndex <= this.ROWS; xIndex++) {\n      this.baseTileLayer.push([]);\n      this.midTileLayer.push([]);\n      for (let yIndex = 0; yIndex <= this.COLS; yIndex++) {\n        this.baseTileLayer[xIndex].push({\n        })\n        this.midTileLayer[xIndex].push(undefined)\n      }\n    }\n    await Neutralino.events.on(\"CONTAINER_LIST\", (data: CustomEvent<Container[]>) => {\n      //Generate Containers in random places in boundaries\n      Object.values(this.currentContainerCoords).forEach(coords => {\n        this.midTileLayer[coords.ROW][coords.COL] = undefined\n      })\n      this.currentContainerCoords = {};\n      if (data.detail.length === 0)\n        return;\n      this.createContainersInBoundaries(data.detail);\n    })\n    await Neutralino.extensions.dispatch(\"js.neutralino.sampleextension\", \"GET_CONTAINER_LIST\", undefined)\n    await Neutralino.events.on(\"NEW_CONTAINER\", (data: CustomEvent<Container>) => {\n      //Generate Containers in random places in boundaries\n      if (!data.detail)\n        return;\n      this.createContainersInBoundaries([data.detail]);\n    })\n    await Neutralino.events.on(\"CONTAINER_UPDATE\", (data: CustomEvent<Container>) => {\n      const targetContainerCoords = this.currentContainerCoords[data.detail.id];\n      if (!targetContainerCoords)\n        return;\n      let targetContainer = this.midTileLayer[targetContainerCoords.ROW][targetContainerCoords.COL];\n      if (!targetContainer)\n        return;\n      targetContainer.state = data.detail.state;\n      targetContainer.status = data.detail.status;\n    })\n    await Neutralino.events.on(\"REMOVE_CONTAINER\", (data: CustomEvent<string>) => {\n      const containerCoords = this.currentContainerCoords[data.detail];\n      if (!containerCoords)\n        return;\n      this.connections = this.connections.filter(c => c.from !== data.detail && c.to !== data.detail)\n      this.midTileLayer[containerCoords.ROW][containerCoords.COL] = undefined\n      delete this.currentContainerCoords[data.detail]\n    })\n\n    await Neutralino.events.on(\"NETWORK_LIST\", (data: CustomEvent<{ name: string, containers: string[] }[]>) => {\n      data.detail.forEach((n) => {\n        const index = this.networks.findIndex((n) => n.name === n.name);\n        if (index !== -1) {\n          const newContainerInNetwork = n.containers.filter((c) => !Object.keys(this.networks[index].containers).includes(c))\n          let containerPairs: { firstContainer: string, secondContainer: string }[] = [];\n\n          if (newContainerInNetwork.length === 0)\n            return;\n\n          for (let index = 0; index < n.containers.length; index++) {\n            const firstElement = n.containers[index];\n            for (let secondIndex = 0; secondIndex < newContainerInNetwork.length; secondIndex++) {\n              const secondElement = newContainerInNetwork[secondIndex];\n              if (firstElement === secondElement)\n                continue;\n              containerPairs.push({\n                firstContainer: firstElement,\n                secondContainer: secondElement\n              })\n            }\n          }\n          this.networks[index].containers = n.containers.reduce((map: { [key: string]: { COL: number, ROW: number } }, id: string) => {\n            map[id] = this.currentContainerCoords[id];\n            return map;\n          }, {});\n          this.createNetworkConnection(n.name, containerPairs);\n        }\n        else {\n          this.networks.push({\n            name: n.name,\n            containers: n.containers.reduce((map: { [key: string]: { COL: number, ROW: number } }, id: string) => {\n              map[id] = this.currentContainerCoords[id];\n              return map;\n            }, {})\n          })\n          const containerPairs: { firstContainer: string, secondContainer: string }[] = [];\n          for (let index = 0; index < n.containers.length; index++) {\n            const firstElement = n.containers[index];\n            for (let secondIndex = 0; secondIndex < n.containers.length; secondIndex++) {\n              const secondElement = n.containers[secondIndex];\n              if (index === secondIndex)\n                continue;\n\n              if (containerPairs.findIndex(cp => cp.firstContainer === secondElement && cp.secondContainer === firstElement) > -1)\n                continue;\n\n              containerPairs.push({\n                firstContainer: firstElement,\n                secondContainer: secondElement\n              })\n            }\n          }\n          this.createNetworkConnection(n.name, containerPairs);\n        }\n      })\n    })\n  }\n\n  addContainer(row: number, col: number, container: Container) {\n    let entity: Container;\n    entity = {\n      ...container,\n      icon: CONTAINER_IMAGE,\n    } as Container;\n    this.midTileLayer[row][col] = entity;\n  }\n\n  dismissModal() {\n    this.isCreateContainerModalVisible = false;\n  }\n\n  getVisibleTiles(): { firstVisibleRowIndex: number, lastVisibleRowIndex: number, firstVisibleColIndex: number, lastVisibleColIndex: number } | undefined {\n    const mapBoundings = this.map.nativeElement.getBoundingClientRect();\n    let firstVisibleRow = undefined;\n    let firstVisibleRowIndex = undefined;\n    let lastVisibleRowIndex = undefined;\n\n    let firstVisibleColIndex = undefined;\n    let lastVisibleColIndex = undefined;\n\n    for (let index = 0; index < this.map.nativeElement.children.length; index++) {\n      const row = this.map.nativeElement.children[index];\n      const rowBoudings = row.getBoundingClientRect();\n\n      // If the child is in the viewport\n      if (rowBoudings.top >= -15 && rowBoudings.bottom <= ((mapBoundings.bottom < 0 ? (mapBoundings.height + mapBoundings.bottom) : mapBoundings.bottom)) + 15) {\n        if (!firstVisibleRow) {\n          firstVisibleRow = row;\n          firstVisibleRowIndex = index;\n        }\n      }\n      // If the child is outside the viewport\n      else {\n        if (!firstVisibleRow)\n          continue;\n        if (!lastVisibleRowIndex) {\n          lastVisibleRowIndex = index - 1;\n          break;\n        }\n\n      }\n    }\n\n    if (!firstVisibleRow)\n      return undefined;\n\n    for (let index = 0; index < firstVisibleRow.children.length; index++) {\n      const tile = firstVisibleRow.children[index];\n      const tileBoudings = tile.getBoundingClientRect();\n      if (tileBoudings.left >= 0 && tileBoudings.right <= (mapBoundings.right < 0 ? (mapBoundings.width + mapBoundings.left) : mapBoundings.width - 16)) {\n        if (firstVisibleColIndex === undefined)\n          firstVisibleColIndex = index;\n      }\n      else {\n        if (firstVisibleColIndex === undefined)\n          continue;\n        if (!lastVisibleColIndex)\n          lastVisibleColIndex = index;\n        break;\n      }\n    }\n\n    return { firstVisibleColIndex: firstVisibleColIndex ?? 0, firstVisibleRowIndex: firstVisibleRowIndex ?? 0, lastVisibleColIndex: lastVisibleColIndex ?? 0, lastVisibleRowIndex: lastVisibleRowIndex ?? 0 }\n  }\n\n  createContainersInBoundaries(services: Container[]): { row: number, col: number }[] {\n    let result: { row: number, col: number }[] = []\n\n    const visibleTileBoundaries = this.getVisibleTiles();\n\n    if (!visibleTileBoundaries)\n      return [];\n\n    const centerRow = Math.floor((visibleTileBoundaries.firstVisibleRowIndex ?? 0) + ((visibleTileBoundaries.lastVisibleRowIndex ?? 0) / 2));\n    const centerCol = Math.floor((visibleTileBoundaries.firstVisibleColIndex ?? 0) + ((visibleTileBoundaries.lastVisibleColIndex ?? 0) / 2));\n    let radius = 3;\n    let maxRow = centerRow + radius;\n    let maxCol = centerCol + radius;\n    let minRow = centerRow - radius;\n    let minCol = centerCol - radius;\n\n    let randomRow: number = 0;\n    let randomCol: number = 0;\n\n    services.forEach((value) => {\n      do {\n        randomRow = Math.floor(Math.random() * (maxRow - minRow + 1)) + minRow;\n        randomCol = Math.floor(Math.random() * (maxCol - minCol + 1)) + minCol;\n      } while (this.midTileLayer[randomRow][randomCol]);\n      this.addContainer(randomRow, randomCol, value)\n      this.currentContainerCoords[value.id] = { ROW: randomRow, COL: randomCol };\n      ++radius;\n    });\n    return result;\n  }\n\n  createNetworkConnection(networkName: string, containerPairs: { firstContainer: string, secondContainer: string }[]) {\n    for (let index = 0; index < containerPairs.length; index++) {\n      const newConn = containerPairs[index];\n      const firstDOM = this.getDOMElementFromCoords(this.currentContainerCoords[newConn.firstContainer]);\n      if (!firstDOM)\n        continue;\n      const secondDOM = this.getDOMElementFromCoords(this.currentContainerCoords[newConn.secondContainer]);\n      if (!secondDOM)\n        continue;\n      const firstBounds = firstDOM.getBoundingClientRect();\n      const secondBounds = secondDOM.getBoundingClientRect();\n      this.connections.push({\n        name: networkName,\n        from: newConn.firstContainer,\n        to: newConn.secondContainer,\n        x1: firstBounds.x + 32,\n        x2: secondBounds.x + 32,\n        y1: firstBounds.y + 16,\n        y2: secondBounds.y + 16,\n        isHovered: false\n      })\n\n    }\n  }\n\n  getDOMElementFromCoords(coords: { COL: number, ROW: number }): HTMLElement | null {\n    return document.getElementById(coords.ROW.toString() + coords.COL.toString());\n  }\n\n  entitySelected(event: MouseEvent, rowIndex: number, colIndex: number) {\n    const entity = this.midTileLayer[rowIndex][colIndex];\n    if (!entity)\n      return;\n    this.isCreateContainerModalVisible = true\n    this.selectedContainer = entity;\n    event.stopPropagation();\n  }\n\n  baseSelected() {\n    console.log(\"BASE\");\n  }\n\n  mouseLeaveConnection(connection: NetworkConnection) {\n    this.connections.forEach((c) => {\n      c.isHovered = false;\n    })\n    this.tooltip = undefined;\n  }\n\n  mouseEnterConnection(connection: NetworkConnection, element: unknown) {\n    this.connections.forEach((c) => {\n      if (c.name === connection.name)\n        c.isHovered = true;\n    })\n    const elementBounds = (element as SVGLineElement).getBoundingClientRect()\n    this.tooltip = {\n      content: connection.name,\n      left: elementBounds.left - 20 + (elementBounds.width / 2),\n      top: elementBounds.top + (elementBounds.height / 2)\n    };\n  }\n\n  mouseLeaveContainer(container: Container | undefined) {\n    if (!container)\n      return;\n    this.tooltip = undefined;\n  }\n\n  mouseEnterContainer(container: Container | undefined, element: HTMLDivElement) {\n    if (!container)\n      return;\n    this.tooltip = {\n      content: container.name,\n      left: element.getBoundingClientRect().left,\n      top: element.getBoundingClientRect().top\n    };\n  }\n\n}\n","<drag-scroll>\n  <div #map class=\"w-screen h-screen flex flex-col overflow-visible relative\">\n    @for (row of baseTileLayer;let rowIndex = $index; track rowIndex) {\n    <div class=\"w-full h-full flex\">\n      @for (cell of row;let colIndex = $index; track colIndex ) {\n      <div [id]=\"(rowIndex).toString() + (colIndex).toString()\" (click)=\"baseSelected()\"\n        class=\" aspect-square w-[64px] h-[64px] flex items-center justify-center text-black hover:bg-green-200 bg-green-300  relative\">\n        @if (midTileLayer[rowIndex][colIndex]) {\n        <div #cell (click)=\"entitySelected($event, rowIndex, colIndex)\"\n          (mouseenter)=\"mouseEnterContainer(midTileLayer[rowIndex][colIndex], cell)\"\n          (mouseleave)=\"mouseLeaveContainer(midTileLayer[rowIndex][colIndex])\"\n          [style.background-image]=\"'url(' + midTileLayer[rowIndex][colIndex]?.icon + ')'\"\n          class=\"aspect-square w-[64px] h-[64px] flex items-center justify-center text-white absolute z-10\">\n          <div\n            [class]=\"'pixel-border absolute top-0 right-2 w-[10px] h-[10px] ' + (midTileLayer[rowIndex][colIndex]?.state | stateToColor)\">\n          </div>\n        </div>\n        }\n      </div>\n      }\n    </div>\n    }\n    <svg class=\"absolute w-screen h-screen z-20 pointer-events-none\">\n      @for (connection of connections; track $index) {\n      <line #conn class=\"pointer-events-auto\" (mouseenter)=\"mouseEnterConnection(connection,conn)\"\n        (mouseleave)=\"mouseLeaveConnection(connection)\" [attr.x1]=\"connection.x1\" [attr.y1]=\"connection.y1\"\n        stroke-width=\"4px\" [attr.x2]=\"connection.x2\" [attr.y2]=\"connection.y2\"\n        [attr.stroke]=\"connection.isHovered ? 'red' : 'black'\" />\n      }\n    </svg>\n    @if(tooltip) {\n    <div [style.top]=\"tooltip.top - 20 + 'px'\" [style.left]=\"tooltip.left - 20 + 'px'\"\n      class=\"pixel-border bg-gray-100 p-1 min-w-[100px] z-20 flex justify-center text-zinc-900 absolute\">\n      <span class=\"text-xl\">{{tooltip.content}}</span>\n    </div>\n    }\n  </div>\n</drag-scroll>\n\n@if (isCreateContainerModalVisible) {\n<div class=\"pixel-border absolute top-0 left-0 w-2/4 h-full bg-sky-200 z-30\">\n  <div class=\"flex flex-col h-full\">\n    <div class=\" h-16 w-full flex justify-between items-center px-6\">\n      <div class=\"flex gap-x-5 items-center\">\n        <div [class]=\"'pixel-border w-[10px] h-[10px] ' + (selectedContainer.state | stateToColor)\">\n        </div>\n        <span class=\"text-2xl\">{{selectedContainer.state}} ({{selectedContainer.status}})</span>\n      </div>\n      <button class=\"base-button w-8 h-8\" (click)=\"dismissModal()\">X</button>\n    </div>\n    <div class=\"flex-1 flex-col flex gap-y-3 px-5 \">\n      <span class=\"text-3xl\">Name:</span>\n      <input class=\"pixel-border base-input\" placeholder=\"Awesome Container\" readonly\n        [value]=\"selectedContainer.name\" />\n      <span class=\"text-3xl\">Image:</span>\n      <input class=\"pixel-border base-input\" placeholder=\"Awesome Container\" readonly\n        [value]=\"selectedContainer.image\" />\n      <span class=\"text-3xl\">Ports:</span>\n      @for (port of selectedContainer.ports; track $index) {\n      <span>{{port.privatePort}} : {{port.publicPort}}</span>\n      }\n      @empty {\n      <span class=\"text-2xl\">No ports exposed :(</span>\n      }\n      <span class=\"text-3xl\">Mounts:</span>\n      @for (mount of selectedContainer.mounts; track $index) {\n      <span class=\"text-2xl\">{{mount.destination}} : {{mount.source}}</span>\n      }\n      @empty {\n      <span>No mounts :(</span>\n      }\n    </div>\n\n    <div class=\"flex justify-end items-center gap-x-8 pe-6 h-20 w-full\">\n      <button class=\"base-button \">Stop</button>\n    </div>\n\n  </div>\n\n</div>\n}","import { ApplicationConfig } from '@angular/core';\n\nexport const appConfig: ApplicationConfig = {\n  providers: []\n};\n","import { Tile } from \"./Tile\";\n\nexport interface Container extends Tile {\n    id: string;\n    name: string;\n    state: ContainerState;\n    status:string;\n    image: string;\n    ports: Port[];\n    mounts: Mount[];\n}\n\nexport type Port = {\n    privatePort : number;\n    publicPort: number;\n}\n\nexport type Mount = {\n    source: string;\n    destination:string;\n}\n\nexport enum ContainerState {\n    RUNNING = \"running\",\n    CREATED = \"created\",\n    RESTARTING = \"restarting\",\n    EXITED = \"exited\",\n    PAUSED = \"paused\",\n    DEAD = \"dead\"\n}","import { Pipe, PipeTransform } from '@angular/core';\nimport { ContainerState } from '../models/Container';\n\n@Pipe({\n    name: 'stateToColor',\n    standalone: true\n})\n\nexport class ContainerStateToColorPipe implements PipeTransform {\n    transform(value: ContainerState | undefined): string {\n        if(!value)\n            return \"\";\n        switch (value) {\n            case ContainerState.CREATED:\n            case ContainerState.RUNNING:\n                return \"bg-green-400\";\n            case ContainerState.PAUSED:\n                return \"bg-yellow-400\";\n            case ContainerState.RESTARTING:\n                return \"bg-blue-400\";\n            case ContainerState.DEAD:\n                return \"bg-white\";\n            case ContainerState.EXITED:\n                return \"bg-red-400\";\n        }\n    }\n}","import { bootstrapApplication } from '@angular/platform-browser';\nimport { appConfig } from './app/app.config';\nimport { AppComponent } from './app/app.component';\nimport * as neutralinojs from \"@neutralinojs/lib\";\n\ndeclare global {\n  const Neutralino: typeof neutralinojs\n}\n\nNeutralino.init();\n\nbootstrapApplication(AppComponent, appConfig)\n  .catch((err) => console.error(err));\n"],"names":["DragScrollModule","ContainerStateToColorPipe","i0","ɵɵelementStart","ɵɵlistener","AppComponent_For_4_For_2_Conditional_1_Template_div_click_0_listener","$event","ɵɵrestoreView","_r16","colIndex_r10","ɵɵnextContext","$index","rowIndex_r6","ctx_r14","ɵɵresetView","entitySelected","AppComponent_For_4_For_2_Conditional_1_Template_div_mouseenter_0_listener","_r13","ɵɵreference","ctx_r18","mouseEnterContainer","midTileLayer","AppComponent_For_4_For_2_Conditional_1_Template_div_mouseleave_0_listener","ctx_r21","mouseLeaveContainer","ɵɵelement","ɵɵelementEnd","ɵɵstyleProp","ctx_r12","icon","ɵɵadvance","ɵɵclassMap","ɵɵpipeBind1","state","AppComponent_For_4_For_2_Template_div_click_0_listener","_r27","ctx_r26","baseSelected","ɵɵtemplate","AppComponent_For_4_For_2_Conditional_1_Template","ɵɵproperty","toString","ɵɵconditional","ctx_r8","ɵɵrepeaterCreate","AppComponent_For_4_For_2_Template","ɵɵrepeaterTrackByIndex","ɵɵrepeater","row_r5","AppComponent_For_7_Template__svg_line_mouseenter_0_listener","restoredCtx","_r34","connection_r29","$implicit","_r32","ctx_r33","mouseEnterConnection","AppComponent_For_7_Template__svg_line_mouseleave_0_listener","ctx_r35","mouseLeaveConnection","ɵɵattribute","x1","y1","x2","y2","isHovered","ɵɵnamespaceHTML","ɵɵtext","ctx_r3","tooltip","top","left","ɵɵtextInterpolate","content","ɵɵtextInterpolate2","port_r40","privatePort","publicPort","mount_r43","destination","source","AppComponent_Conditional_9_Template_button_click_8_listener","_r47","ctx_r46","dismissModal","AppComponent_Conditional_9_For_20_Template","AppComponent_Conditional_9_ForEmpty_21_Template","AppComponent_Conditional_9_For_25_Template","AppComponent_Conditional_9_ForEmpty_26_Template","ctx_r4","selectedContainer","status","name","image","ports","mounts","CONTAINER_IMAGE","AppComponent","constructor","ROWS","COLS","baseTileLayer","currentContainerCoords","networks","connections","undefined","isCreateContainerModalVisible","ngOnInit","_this","_asyncToGenerator","xIndex","push","yIndex","Neutralino","events","on","data","Object","values","forEach","coords","ROW","COL","detail","length","createContainersInBoundaries","extensions","dispatch","targetContainerCoords","id","targetContainer","containerCoords","filter","c","from","to","n","index","findIndex","newContainerInNetwork","containers","keys","includes","containerPairs","firstElement","secondIndex","secondElement","firstContainer","secondContainer","reduce","map","createNetworkConnection","cp","addContainer","row","col","container","entity","getVisibleTiles","mapBoundings","nativeElement","getBoundingClientRect","firstVisibleRow","firstVisibleRowIndex","lastVisibleRowIndex","firstVisibleColIndex","lastVisibleColIndex","children","rowBoudings","bottom","height","tile","tileBoudings","right","width","services","result","visibleTileBoundaries","centerRow","Math","floor","centerCol","radius","maxRow","maxCol","minRow","minCol","randomRow","randomCol","value","random","networkName","newConn","firstDOM","getDOMElementFromCoords","secondDOM","firstBounds","secondBounds","x","y","document","getElementById","event","rowIndex","colIndex","stopPropagation","console","log","connection","element","elementBounds","_","_2","selectors","viewQuery","AppComponent_Query","rf","ctx","AppComponent_For_4_Template","ɵɵnamespaceSVG","AppComponent_For_7_Template","AppComponent_Conditional_8_Template","AppComponent_Conditional_9_Template","i1","DragScrollComponent","styles","appConfig","providers","ContainerState","transform","CREATED","RUNNING","PAUSED","RESTARTING","DEAD","EXITED","pure","standalone","bootstrapApplication","init","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}